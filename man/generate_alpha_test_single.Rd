% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_alpha_test_single.R
\name{generate_alpha_test_single}
\alias{generate_alpha_test_single}
\title{Perform alpha diversity association tests using linear models}
\usage{
generate_alpha_test_single(
  data.obj,
  alpha.obj = NULL,
  time.var = NULL,
  t.level = NULL,
  alpha.name,
  group.var,
  adj.vars
)
}
\arguments{
\item{data.obj}{A list object containing feature.tab (OTU table with taxa in rows and samples in columns)
and meta.dat (Metadata table with samples in rows and variables in columns).}

\item{alpha.obj}{A list object containing pre-calculated alpha diversity indices;
if not provided, the function will calculate the indices using the 'alpha.name' parameter. Default is NULL.}

\item{time.var}{character; the name of the time variable in the metadata. Default is NULL.}

\item{t.level}{character; the level of the time variable to subset the data. Default is NULL.}

\item{alpha.name}{character vector containing the names of alpha diversity indices to calculate.
Possible values are: "shannon", "simpson", "observed_species", "chao1", "ace", and "pielou".}

\item{group.var}{character; the name of the group variable in the metadata.}

\item{adj.vars}{character vector; the names of the adjustment variables in the metadata.}
}
\value{
A list containing the association tests for each alpha diversity index.
        Each element in the list corresponds to a different alpha diversity index,
        and contains a dataframe with the linear model's coefficients, standard errors, t values, and p values.
}
\description{
This function conducts association tests for multiple alpha diversity indices using linear model analyses.
It can be applied to cross-sectional data, a single time point from longitudinal or paired data.
It takes a data object as input and returns a list of association tests for each specified alpha diversity index.
}
\examples{
generate_alpha_test_single(data.obj = T2D.obj,
                           time.var = "visit_number",
                           t.level = "   4",
                           alpha.name = c("shannon", "simpson"),
                           group.var = "subject_race",
                           adj.vars = "subject_gender")

}
