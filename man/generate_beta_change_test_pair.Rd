% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_beta_change_test_pair.R
\name{generate_beta_change_test_pair}
\alias{generate_beta_change_test_pair}
\title{Compute and Analyze Pairwise Beta Diversity Measures}
\usage{
generate_beta_change_test_pair(
  data.obj,
  dist.obj = NULL,
  time.var = NULL,
  subject.var,
  group.var,
  adj.vars,
  change.base = NULL,
  dist.name = c("BC", "Jaccard", "UniFrac", "GUniFrac", "WUniFrac", "JS")
)
}
\arguments{
\item{data.obj}{A list object in MicrobiomeStat format.}

\item{dist.obj}{A pre-calculated distance object (optional). If not provided, it is computed using the data.obj.}

\item{time.var}{The name of the time variable column in the metadata.}

\item{subject.var}{The name of the subject variable column in the metadata.}

\item{group.var}{The name of the grouping variable column for linear modeling in the metadata.}

\item{adj.vars}{Names of additional variables to be used as covariates in the analysis.}

\item{change.base}{The baseline time point for detecting changes in beta diversity.}

\item{dist.name}{Character vector specifying which beta diversity indices to compute. Defaults to c('BC', 'Jaccard', 'UniFrac', 'GUniFrac', 'WUniFrac', 'JS').}
}
\value{
A named list where each element is a coefficient table (with p-values) from a linear model of the corresponding beta diversity measure against the grouping variable and covariates.
}
\description{
This function calculates beta diversity measures, performs linear modeling on them, and generates a report.
If no precalculated distance object is provided, it calculates the distance object from the data.
}
\examples{

library(vegan)
library(GUniFrac)
library(ape)
library(philentropy)
library(MicrobiomeStat)

# Load example data
data(peerj32.obj)
dist.obj <- mStat_calculate_beta_diversity(peerj32.obj, dist.name = c('BC', 'Jaccard'))

# Generate beta diversity report
beta_diversity_report <- generate_beta_change_test_pair(
  data.obj = peerj32.obj,
  dist.obj = NULL,
  time.var = "time",
  subject.var = "subject",
  group.var = "group",
  adj.vars = c("sex"),
  change.base = "1",
  dist.name = c('BC', 'Jaccard')
)


}
