% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_taxa_indiv_boxplot_single.R
\name{generate_taxa_indiv_boxplot_single}
\alias{generate_taxa_indiv_boxplot_single}
\title{Generate Taxa Boxplots for Single Time Point}
\usage{
generate_taxa_indiv_boxplot_single(
  data.obj,
  subject.var,
  time.var,
  t.level,
  group.var = NULL,
  strata.var = NULL,
  feature.level = NULL,
  features.plot = NULL,
  feature.dat.type = c("count", "proportion", "other"),
  top.k.plot = NULL,
  top.k.func = NULL,
  Transform = c("identity", "sqrt", "log"),
  prev.filter = 0.05,
  abund.filter = 0.01,
  base.size = 16,
  theme.choice = "prism",
  custom.theme = NULL,
  palette = NULL,
  pdf = TRUE,
  file.ann = NULL,
  pdf.wid = 11,
  pdf.hei = 8.5,
  ...
)
}
\arguments{
\item{data.obj}{A list object containing the input data.}

\item{subject.var}{A string indicating the variable for subject identifiers.}

\item{time.var}{A string indicating the variable for time points. If NULL, the function assumes that data for a single time point is provided.}

\item{t.level}{A string specifying the time level to generate the plot for. If NULL, the function assumes that data for a single time point is provided.}

\item{group.var}{Optional string specifying the variable for groups.}

\item{strata.var}{Optional string specifying the variable for strata.}

\item{feature.level}{A string specifying the taxonomic level to plot.}

\item{features.plot}{A character vector of features to include in the plot. If NULL, top features will be selected based on `top.k.plot` and `top.k.func`.}

\item{feature.dat.type}{A string indicating the type of data in the input object. Options are "count", "proportion", "other".}

\item{top.k.plot}{An integer indicating the top K features to plot based on the function specified in `top.k.func`.}

\item{top.k.func}{A function to determine the top K features to plot.}

\item{Transform}{A string indicating the transformation to apply to the data before plotting. Options are "identity", "sqrt", "log".}

\item{prev.filter}{A numeric value indicating the minimum prevalence for a feature to be included in the plot.}

\item{abund.filter}{A numeric value indicating the minimum abundance for a feature to be included in the plot.}

\item{base.size}{A numeric value specifying the base font size for the plot.}

\item{theme.choice}{A string specifying the ggplot theme to use for the plot.}

\item{custom.theme}{A ggplot2 theme object for user-defined theme. Default is NULL.}

\item{palette}{A character vector specifying the color palette. Default is NULL.}

\item{pdf}{A logical value indicating whether to save the plot as a PDF. Default is TRUE.}

\item{file.ann}{A string for additional annotation to the file name. Default is NULL.}

\item{pdf.wid}{A numeric value specifying the width of the PDF file. Default is 11.}

\item{pdf.hei}{A numeric value specifying the height of the PDF file. Default is 8.5.}

\item{...}{Additional arguments to be passed to the function.}
}
\value{
A list of ggplot objects for each taxonomic level.
}
\description{
This function generates boxplots to visualize the taxonomic composition of samples for a single time point in a longitudinal study.
It provides options for grouping and stratifying data, and selecting the top k features based on a user-defined function.
}
\details{
This function generates a boxplot of taxa abundances for a single time point in a longitudinal study.
The boxplot can be stratified by a group variable and/or other variables.
It allows for different taxonomic levels to be used and a specific number of features to be included in the plot.
The function also has options to customize the size, theme, and color palette of the plot, and to save the plot as a PDF.
}
\examples{
# Generate the boxplot pair
data(ecam.obj)
generate_taxa_indiv_boxplot_single(
  data.obj = ecam.obj,
  subject.var = "studyid",
  time.var = "month",
  t0.level = NULL,
  ts.levels = NULL,
  group.var = NULL,
  strata.var = NULL,
  feature.level = c("Phylum"),
  feature.dat.type = "proportion",
  Transform = "log",
  prev.filter = 0.1,
  abund.filter = 0.1,
  base.size = 20,
  theme.choice = "classic",
  custom.theme = NULL,
  palette = NULL,
  pdf = TRUE,
  file.ann = "test",
  pdf.wid = 11,
  pdf.hei = 8.5
)
data(peerj32.obj)
generate_taxa_indiv_boxplot_single(
  data.obj = peerj32.obj,
  subject.var = "subject",
  time.var = "time",
  t.level = "1",
  group.var = "group",
  strata.var = "sex",
  feature.level = c("Family"),
  features.plot = NULL,
  feature.dat.type = "count",
  top.k.plot = NULL,
  top.k.func = NULL,
  Transform = "log",
  prev.filter = 0,
  abund.filter = 0,
  base.size = 20,
  theme.choice = "bw",
  custom.theme = NULL,
  palette = NULL,
  pdf = TRUE,
  file.ann = NULL,
  pdf.wid = 11,
  pdf.hei = 8.5
)
}
