% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mStat_generate_report_pair.R
\name{mStat_generate_report_pair}
\alias{mStat_generate_report_pair}
\title{Generate a report for microbial ecology analysis of paired data}
\usage{
mStat_generate_report_pair(
  data.obj,
  dist.obj = NULL,
  alpha.obj = NULL,
  group.var,
  adj.vars,
  subject.var,
  time.var,
  alpha.name = c("shannon", "simpson", "observed_species", "chao1", "ace", "pielou"),
  dist.name = c("BC", "Jaccard", "UniFrac", "GUniFrac", "WUniFrac", "JS"),
  change.base,
  change.func,
  strata.var = NULL,
  base.size = 16,
  theme.choice = "prism",
  custom.theme = NULL,
  palette = NULL,
  pdf = TRUE,
  file.ann = NULL,
  pdf.wid = 11,
  pdf.hei = 8.5,
  prev.filter = 0,
  abund.filter = 0,
  feature.level = NULL,
  features.plot = NULL,
  feature.dat.type = c("count", "proportion", "other"),
  output.file,
  ...
)
}
\arguments{
\item{data.obj}{A list object in a format specific to MicrobiomeStat, which can include components such as feature.tab (matrix), feature.ann (matrix), meta.dat (data.frame), tree, and feature.agg.list (list). The data.obj can be converted from other formats using several functions from the MicrobiomeStat package, including: 'mStat_convert_DGEList_to_data_obj', 'mStat_convert_DESeqDataSet_to_data_obj', 'mStat_convert_phyloseq_to_data_obj', 'mStat_convert_SummarizedExperiment_to_data_obj', 'mStat_import_qiime2_as_data_obj', 'mStat_import_mothur_as_data_obj', 'mStat_import_dada2_as_data_obj', and 'mStat_import_biom_as_data_obj'. Alternatively, users can construct their own data.obj. Note that not all components of data.obj may be required for all functions in the MicrobiomeStat package.}

\item{dist.obj}{Distance matrix between samples, usually calculated using
\code{\link[MicrobiomeStat]{mStat_calculate_beta_diversity}} function.
If NULL, beta diversity will be automatically computed from \code{data.obj}
using \code{mStat_calculate_beta_diversity}.}

\item{alpha.obj}{An optional list containing pre-calculated alpha diversity indices. If NULL (default), alpha diversity indices will be calculated using mStat_calculate_alpha_diversity function from MicrobiomeStat package.}

\item{group.var}{Variable name used for grouping samples.}

\item{adj.vars}{Variables to adjust for in the analysis.}

\item{subject.var}{Variable name used for subject identification.}

\item{time.var}{Variable name used for time points in paired data.}

\item{alpha.name}{Names of alpha diversity indices to include in the analysis.}

\item{dist.name}{Names of beta diversity distance metrics to include in the analysis.}

\item{change.base}{The base level for calculating changes in paired data.}

\item{change.func}{The function for calculating changes in paired data.}

\item{strata.var}{Variable to stratify the analysis by (optional).}

\item{base.size}{Base font size for the generated plots.}

\item{theme.choice}{Plot theme choice. Can be one of:
  - "prism": ggprism::theme_prism()
  - "classic": theme_classic()
  - "gray": theme_gray()
  - "bw": theme_bw()
Default is "bw".}

\item{custom.theme}{A custom ggplot theme provided as a ggplot2 theme object. This allows users to override the default theme and provide their own theme for plotting. To use a custom theme, first create a theme object with ggplot2::theme(), then pass it to this argument. For example:

```r
my_theme <- ggplot2::theme(
  axis.title = ggplot2::element_text(size=16, color="red"),
  legend.position = "none"
)
```

Then pass `my_theme` to `custom.theme`. Default is NULL, which will use the default theme based on `theme.choice`.}

\item{palette}{Color palette used for the plots.}

\item{pdf}{Logical indicating whether to save plots as PDF files (default: TRUE).}

\item{file.ann}{Annotation text for the PDF file names.}

\item{pdf.wid}{Width of the PDF plots.}

\item{pdf.hei}{Height of the PDF plots.}

\item{prev.filter}{Numeric value specifying the minimum prevalence threshold for filtering
taxa before analysis. Taxa with prevalence below this value will be removed.
Prevalence is calculated as the proportion of samples where the taxon is present.
Default 0 removes no taxa by prevalence filtering.}

\item{abund.filter}{Numeric value specifying the minimum abundance threshold for filtering
taxa before analysis. Taxa with mean abundance below this value will be removed.
Abundance refers to counts or proportions depending on \code{feature.dat.type}.
Default 0 removes no taxa by abundance filtering.}

\item{feature.level}{Taxonomic level for feature analysis.}

\item{features.plot}{A character vector specifying which feature IDs (e.g. OTU IDs) to plot.
Default is NULL, in which case features will be selected based on `top.k.plot` and `top.k.func`.}

\item{feature.dat.type}{Data type for feature analysis (count, proportion, or other).}

\item{output.file}{Output file name for the report.}

\item{...}{Additional arguments passed to internal functions.}
}
\value{
A report file containing the microbial ecology analysis results for paired data.
}
\description{
This function generates a comprehensive report for microbial ecology analysis,
including changes in alpha diversity, beta diversity, and taxonomic features between paired data.
The function is specifically designed for analysis of paired data.
}
\examples{
\dontrun{
library(GUniFrac)
library(pheatmap)
library(vegan)
library(ggh4x)


data(peerj32.obj)

dist.obj <- mStat_calculate_beta_diversity(peerj32.obj, dist.name = c('BC', 'Jaccard'))

# Generate a report for microbial ecology analysis
mStat_generate_report_pair(
  data.obj = peerj32.obj,
  dist.obj = NULL,
  alpha.obj = NULL,
  group.var = "group",
  adj.vars = c("sex"),
  subject.var = "subject",
  time.var = "time",
  alpha.name = c("shannon","simpson"),
  dist.name = c("BC",'Jaccard'),
  change.base = "1",
  change.func = "relative difference",
  strata.var = "sex",
  feature.level = c("Phylum","Family"),
  feature.dat.type = "count",
  theme.choice = "bw",
  base.size = 12,
  output.file = "mStat_generate_report_pair_example.pdf"
)
}
}
