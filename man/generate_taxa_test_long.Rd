% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_taxa_test_long.R
\name{generate_taxa_test_long}
\alias{generate_taxa_test_long}
\title{Longitudinal Taxa Test Generation}
\usage{
generate_taxa_test_long(
  data.obj,
  subject.var,
  time.var = NULL,
  t0.level,
  ts.levels,
  group.var,
  adj.vars,
  feature.level,
  prev.filter = 0,
  abund.filter = 0,
  feature.dat.type = c("count", "proportion"),
  ...
)
}
\arguments{
\item{data.obj}{A MicrobiomeStat formatted list object.}

\item{subject.var}{A string specifying the subject variable column in the metadata.}

\item{time.var}{A string specifying the time variable column in the metadata. Default is NULL.}

\item{t0.level}{A numeric specifying the baseline time level.}

\item{ts.levels}{A vector of numerics specifying the time points to be considered in the analysis.}

\item{group.var}{A string specifying the grouping variable column in the metadata.}

\item{adj.vars}{A string vector specifying the additional covariates in the metadata.}

\item{feature.level}{A string specifying the taxonomic level for analysis.}

\item{prev.filter}{A numeric specifying the minimum prevalence filter for taxa. Default is 0.}

\item{abund.filter}{A numeric specifying the minimum abundance filter for taxa. Default is 0.}

\item{feature.dat.type}{A string specifying the feature data type. Either "count" or "proportion". Default is "count".}

\item{...}{Additional arguments to pass to the function.}
}
\value{
A list of dataframes, each corresponding to a feature level. Each dataframe contains calculated taxa changes, p-values and other statistics from the linear model.
}
\description{
Generate longitudinal taxa test statistics based on the provided MicrobiomeStat data object and user-specified variables.
}
\examples{
\dontrun{
# Load example data
data(peerj32.obj)

results <- generate_taxa_test_long(
  data.obj = peerj32.obj,
  subject.var = "subject",
  time.var = "time",
  t0.level = "1",
  ts.levels = "2",
  group.var = "group",
  adj.vars = "sex",
  feature.level = "Phylum",
  prev.filter = 0.001,
  abund.filter = 0.001,
  feature.dat.type = "count"
)
data(ecam.obj)
results <- generate_taxa_test_long(
  data.obj = ecam.obj,
  subject.var = "studyid",
  time.var = "month",
  t0.level = NULL,
  ts.levels = NULL,
  group.var = "diet",
  adj.vars = "antiexposedall",
  feature.level = "Phylum",
  prev.filter = 0.001,
  abund.filter = 0.001,
  feature.dat.type = "proportion"
)
}
}
