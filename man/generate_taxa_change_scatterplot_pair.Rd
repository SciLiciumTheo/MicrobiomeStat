% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_taxa_change_scatterplot_pair.R
\name{generate_taxa_change_scatterplot_pair}
\alias{generate_taxa_change_scatterplot_pair}
\title{Generate taxa-level difference scatterplot pairs}
\usage{
generate_taxa_change_scatterplot_pair(
  data.obj,
  subject.var,
  time.var,
  group.var = NULL,
  strata.var = NULL,
  change.base = NULL,
  change.func = "difference",
  feature.level = NULL,
  feature.dat.type = c("count", "proportion", "other"),
  features.plot = NULL,
  top.k.plot = NULL,
  top.k.func = NULL,
  prev.filter = 0.1,
  abund.filter = 0.1,
  base.size = 16,
  theme.choice = "bw",
  custom.theme = NULL,
  palette = NULL,
  pdf = TRUE,
  file.ann = NULL,
  pdf.wid = 11,
  pdf.hei = 8.5,
  ...
)
}
\arguments{
\item{data.obj}{An object containing the OTU table, taxonomy table, and sample metadata.}

\item{subject.var}{Character string specifying the subject variable in metadata.}

\item{time.var}{Character string specifying the time variable in metadata.}

\item{group.var}{Character string specifying the grouping variable in metadata. Default NULL.}

\item{strata.var}{Character string specifying the stratification variable in metadata. Default NULL.}

\item{change.base}{Character string specifying the baseline time point.}

\item{change.func}{Function or character string specifying method to compute change ('difference', 'relative difference', 'lfc'). Default 'difference'.}

\item{feature.level}{Character vector specifying taxonomic level(s) to include. Default c('Phylum', 'Family', 'Genus').}

\item{feature.dat.type}{Character string specifying data type, one of "count", "proportion", or "other". Default "count".}

\item{features.plot}{Character vector specifying specific taxa names to plot. Default NULL.}

\item{top.k.plot}{Numeric specifying number of top abundant taxa to plot if top.k.func is provided.}

\item{top.k.func}{Function or character string specifying method to select top abundant taxa (mean, sd, custom function).}

\item{prev.filter}{Numeric specifying minimum prevalence threshold for filtering taxa.}

\item{abund.filter}{Numeric specifying minimum abundance threshold for filtering taxa.}

\item{base.size}{Numeric specifying base font size for plot text elements. Default 16.}

\item{theme.choice}{Character string specifying ggplot2 theme to use. Default 'bw'.}

\item{custom.theme}{A ggplot2 theme object to override default theme. Default NULL.}

\item{palette}{Character vector specifying colors to use for plot. Defaults to RColorBrewer palette.}

\item{pdf}{Logical, if TRUE, save plot(s) as PDF file(s). Default TRUE.}

\item{file.ann}{Character string specifying file annotation to add to PDF file name. Default NULL.}

\item{pdf.wid, pdf.hei}{Numeric specifying PDF width and height in inches. Default 11 x 8.5.}

\item{...}{Additional arguments passed to ggplot2::ggsave().}
}
\value{
A ggplot object containing the scatterplot pair(s).
}
\description{
This function generates scatterplot pairs showing the difference in abundance of taxa
at a specified taxonomic level between two time points, with grouping and stratification.
}
\examples{
# Load required libraries and data
library(microbiome)
library(vegan)
library(tidyverse)
data(peerj32)
peerj32.obj <- list()
peerj32.phy <- peerj32$phyloseq
peerj32.obj <- mStat_convert_phyloseq_to_data_obj(peerj32.phy)
peerj32.obj$meta.dat <- peerj32.obj$meta.dat \%>\% select(all_of("subject")) \%>\% distinct() \%>\%
mutate(cons = runif(n(),0,5)) \%>\% left_join(peerj32.obj$meta.dat,by = "subject") \%>\%
column_to_rownames("sample")
# Generate the boxplot pair
plot_list_all <- generate_taxa_change_scatterplot_pair(
  data.obj = peerj32.obj,
  subject.var = "subject",
  time.var = "time",
  group.var = "cons",
  strata.var = "sex",
  change.base = "1",
  change.func = "lfc",
  feature.level = "Genus",
  feature.dat.type = "other",
  features.plot = NULL,
  top.k.plot = 8,
  top.k.func = "mean",
  prev.filter = 0.1,
  abund.filter = 0.01,
  base.size = 16,
  theme.choice = "classic",
  custom.theme = NULL,
  palette = NULL,
  pdf = TRUE,
  file.ann = "test",
  pdf.wid = 11,
  pdf.hei = 8.5
)
}
