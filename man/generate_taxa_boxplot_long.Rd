% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_taxa_boxplot_long.R
\name{generate_taxa_boxplot_long}
\alias{generate_taxa_boxplot_long}
\title{Generate Taxa Boxplots for Longitudinal Data}
\usage{
generate_taxa_boxplot_long(
  data.obj,
  subject.var,
  time.var,
  t0.level = NULL,
  ts.levels = NULL,
  group.var = NULL,
  strata.var = NULL,
  feature.level = NULL,
  feature.dat.type = c("count", "proportion", "other"),
  features.plot = NULL,
  top.k.plot = NULL,
  top.k.func = NULL,
  Transform = c("identity", "sqrt", "log"),
  prev.filter = 0.05,
  abund.filter = 0.01,
  base.size = 16,
  theme.choice = "prism",
  custom.theme = NULL,
  palette = NULL,
  pdf = TRUE,
  file.ann = NULL,
  pdf.wid = 11,
  pdf.hei = 8.5,
  ...
)
}
\arguments{
\item{data.obj}{A list object containing the input data.}

\item{subject.var}{A string indicating the variable for subject identifiers.}

\item{time.var}{A string indicating the variable for time points.}

\item{t0.level}{A string indicating the reference time point. Default is NULL.}

\item{ts.levels}{A vector indicating the time points to include in the analysis. Default is NULL.}

\item{group.var}{A string indicating the variable for group identifiers. Default is NULL.}

\item{strata.var}{A string indicating the variable for strata identifiers. Default is NULL.}

\item{feature.level}{A string indicating the taxonomic level to plot.}

\item{feature.dat.type}{A string indicating the type of data in the input object.}

\item{features.plot}{A character vector of features to include in the plot. If NULL, top features will be selected based on `top.k.plot` and `top.k.func`.}

\item{top.k.plot}{An integer indicating the top K features to plot based on the function specified in `top.k.func`.}

\item{top.k.func}{A function to determine the top K features to plot.}

\item{Transform}{A string indicating the transformation to apply to the data before plotting. Options are "identity", "sqrt", "log". Default is "identity".}

\item{prev.filter}{A numeric value indicating the minimum prevalence for a feature to be included in the plot.}

\item{abund.filter}{A numeric value indicating the minimum abundance for a feature to be included in the plot.}

\item{base.size}{A numeric value specifying the base size of the plot. Default is 16.}

\item{theme.choice}{A string specifying the theme of the plot. Default is "prism".}

\item{custom.theme}{A ggplot2 theme object for user-defined theme. Default is NULL.}

\item{palette}{A character vector specifying the color palette. Default is NULL.}

\item{pdf}{A logical value indicating whether to save the plot as a PDF. Default is TRUE.}

\item{file.ann}{A string for additional annotation to the file name. Default is NULL.}

\item{pdf.wid}{A numeric value specifying the width of the PDF. Default is 11.}

\item{pdf.hei}{A numeric value specifying the height of the PDF. Default is 8.5.}

\item{...}{Additional arguments to be passed to the function.}
}
\value{
A list of ggplot objects for each taxonomic level.
}
\description{
This function generates boxplots to visualize the taxonomic composition of samples for longitudinal data.
It also provides options for grouping and stratifying data.
}
\details{
This function generates a boxplot of taxa abundances for longitudinal data.
The boxplot can be stratified by a group variable and/or other variables.
It allows for different taxonomic levels to be used and a specific number of features to be included in the plot.
The function also has options to customize the size, theme, and color palette of the plot, and to save the plot as a PDF.
}
\examples{
\dontrun{
# Load required libraries and example data
data(peerj32.obj)
# Generate the boxplot pair
generate_taxa_boxplot_long(
  data.obj = ecam.obj,
  subject.var = "studyid",
  time.var = "month",
  t0.level = NULL,
  ts.levels = NULL,
  group.var = "diet",
  strata.var = NULL,
  feature.level = c("Phylum"),
  features.plot = sample(unique(ecam.obj$feature.ann[,"Phylum"]),1),
  feature.dat.type = "proportion",
  Transform = "log",
  prev.filter = 0,
  abund.filter = 0,
  base.size = 12,
  theme.choice = "bw",
  custom.theme = NULL,
  palette = NULL,
  pdf = TRUE,
  file.ann = NULL,
  pdf.wid = 11,
  pdf.hei = 8.5
)
data(peerj32.obj)
generate_taxa_boxplot_long(
  data.obj = peerj32.obj,
  subject.var = "subject",
  time.var = "time",
  t0.level = "1",
  ts.levels = "2",
  group.var = "group",
  strata.var = "sex",
  feature.level = c("Family"),
  feature.dat.type = "count",
  features.plot = NULL,
  top.k.plot = NULL,
  top.k.func = NULL,
  Transform = "log",
  prev.filter = 0,
  abund.filter = 0,
  base.size = 16,
  theme.choice = "bw",
  custom.theme = NULL,
  palette = NULL,
  pdf = TRUE,
  file.ann = NULL,
  pdf.wid = 11,
  pdf.hei = 8.5
)
}
}
